colnames(atom_top_emp) <- c("user", "n_commits", "project")
electron_top_emp <- as.data.frame(sort(table(electron_commits_info_employee$user)))
electron_top_emp <- electron_top_emp[order(electron_top_emp$Freq, decreasing = TRUE),]
electron_top_emp <- electron_top_emp[1:10,]
electron_top_emp[,3] <- "electron"
colnames(electron_top_emp) <- c("user", "n_commits", "project")
gitlfs_top_emp <- as.data.frame(sort(table(gitlfs_commits_info_employee$user)))
gitlfs_top_emp <- gitlfs_top_emp[order(gitlfs_top_emp$Freq, decreasing = TRUE),]
gitlfs_top_emp <- gitlfs_top_emp[1:10,]
gitlfs_top_emp[,3] <- "gitlfs"
colnames(gitlfs_top_emp) <- c("user", "n_commits", "project")
hubot_top_emp <- as.data.frame(sort(table(hubot_commits_info_employee$user)))
hubot_top_emp <- hubot_top_emp[order(hubot_top_emp$Freq, decreasing = TRUE),]
hubot_top_emp <- hubot_top_emp[1:10,]
hubot_top_emp[,3] <- "hubot"
colnames(hubot_top_emp) <- c("user", "n_commits", "project")
linguist_top_emp <- as.data.frame(sort(table(linguist_commits_info_employee$user)))
linguist_top_emp <- linguist_top_emp[order(linguist_top_emp$Freq, decreasing = TRUE),]
linguist_top_emp <- linguist_top_emp[1:10,]
linguist_top_emp[,3] <- "linguist"
colnames(linguist_top_emp) <- c("user", "n_commits", "project")
top_empl <- rbind(atom_top_emp, electron_top_emp, gitlfs_top_emp, hubot_top_emp, linguist_top_emp)
path_emp <- paste0(local_path, "top_employees.csv")
write.csv(x =  top_empl, file = path_emp, row.names = FALSE)
#Volunters
atom_top_vol <- as.data.frame(sort(table(atom_commits_info_volunter$user)))
atom_top_vol <- atom_top_vol[order(atom_top_vol$Freq, decreasing = TRUE),]
atom_top_vol <- atom_top_vol[1:10,]
atom_top_vol[,3] <- "atom"
colnames(atom_top_vol) <- c("user", "n_commits", "project")
electron_top_vol <- as.data.frame(sort(table(electron_commits_info_volunter$user)))
electron_top_vol <- electron_top_vol[order(electron_top_vol$Freq, decreasing = TRUE),]
electron_top_vol <- electron_top_vol[1:10,]
electron_top_vol[,3] <- "electron"
colnames(electron_top_vol) <- c("user", "n_commits", "project")
gitlfs_top_vol <- as.data.frame(sort(table(gitlfs_commits_info_volunter$user)))
gitlfs_top_vol <- gitlfs_top_vol[order(gitlfs_top_vol$Freq, decreasing = TRUE),]
gitlfs_top_vol <- gitlfs_top_vol[1:10,]
gitlfs_top_vol[,3] <- "gitlfs"
colnames(gitlfs_top_vol) <- c("user", "n_commits", "project")
hubot_top_vol <- as.data.frame(sort(table(hubot_commits_info_volunter$user)))
hubot_top_vol <- hubot_top_vol[order(hubot_top_vol$Freq, decreasing = TRUE),]
hubot_top_vol <- hubot_top_vol[1:10,]
hubot_top_vol[,3] <- "hubot"
colnames(hubot_top_vol) <- c("user", "n_commits", "project")
linguist_top_vol <- as.data.frame(sort(table(linguist_commits_info_volunter$user)))
linguist_top_vol <- linguist_top_vol[order(linguist_top_vol$Freq, decreasing = TRUE),]
linguist_top_vol <- linguist_top_vol[1:10,]
linguist_top_vol[,3] <- "linguist"
colnames(linguist_top_vol) <- c("user", "n_commits", "project")
top_vol <- rbind(atom_top_vol, electron_top_vol, gitlfs_top_vol, hubot_top_vol, linguist_top_vol)
path_vol <- paste0(local_path, "top_volunters.csv")
write.csv(x =  top_vol, file = path_vol, row.names = FALSE)
}
format_commits_group <- function(group, message, type){
a <- format_data(atom_commits_info_employee, group)
c <- format_data(electron_commits_info_employee, group)
e <- format_data(gitlfs_commits_info_employee, group)
g <- format_data(hubot_commits_info_employee, group)
i <- format_data(linguist_commits_info_employee, group)
b <- format_data(atom_commits_info_volunter, group)
d <- format_data(electron_commits_info_volunter, group)
f <- format_data(gitlfs_commits_info_volunter, group)
h <- format_data(hubot_commits_info_volunter, group)
j <- format_data(linguist_commits_info_volunter, group)
format_data_to_stacked_grouped(a, b, c, d, e, f, g, h, i, j, group, message, type)
}
library(readxl)
Survey_Can_you_understand_Ladder_Logic_Complete_ <- read_excel("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete).xlsx")
View(Survey_Can_you_understand_Ladder_Logic_Complete_)
View(Survey_Can_you_understand_Ladder_Logic_Complete_)
View(Survey_Can_you_understand_Ladder_Logic_Complete_)
library(readxl)
Survey_Can_you_understand_Ladder_Logic_Complete_ <- read_excel("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete).xlsx")
View(Survey_Can_you_understand_Ladder_Logic_Complete_)
library(readr)
Survey_Can_you_understand_Ladder_Logic_Complete_Responses <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
View(Survey_Can_you_understand_Ladder_Logic_Complete_Responses)
library(readr)
dataframe <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
View(dataframe)
library(readr)
dataframe <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
View(dataframe)
library(readr)
dataframe <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
spec()
spec(dataframe)
View(dataframe)
View(dataframe)
View(dataframe)
library(ggplot2)
ggplot(survey, aes(x=as.factor(3)))
library(readr)
library(ggplot2)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
ggplot(survey, aes(x=as.factor(3)))
ggplot(survey, aes(x=as.factor(survey[,3])))
survey[,3]
survey[,4]
ggplot(survey, aes(x=as.factor(survey[,4])))
ggplot(survey, aes(x=survey[,4]))
table(survey[,4])
ggplot(survey, aes(y=table(survey[,4])))
ggplot(survey, aes(x=table(survey[,4])))
ggplot(survey, aes(table(survey[,4])))
table(survey[,4]).value
table(survey[,4]).values
table(survey[,4])
as.data.frame(table(survey[,4]))
respondents_occupancy <- as.data.frame(table(survey[,4]))
View(respondents_occupancy)
ggplot(survey, aes(x=respondents_occupancy.Var1,y=respondents_occupancy.Freq))
ggplot(survey, aes(x=respondents_occupancy.var1,y=respondents_occupancy.freq))
ggplot(survey, aes(x=respondents_occupancy[,1],y=respondents_occupancy[,2]))
respondents_occupancy[,1]
ggplot(respondents_occupancy, aes(x=respondents_occupancy[,1],y=respondents_occupancy[,2]))
ggplot(respondents_occupancy, aes(x=Var1,y=Freq))
ggplot(respondents_occupancy, aes(x=Var1,y=Freq))  +
geom_boxplot()
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) )
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) + geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) )
ggplot(respondents_occupancy, aes(x=Var1,y=Freq))
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) + geom_bar()
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) + geom_bar()
respondents_occupancy <- as.data.frame(table(survey[,4]))
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) + geom_bar()
ggplot(survey, aes(x=survey[,4])) + geom_bar()
ggplot(survey, aes(y=survey[,4])) + geom_bar()
ggplot(respondents_occupancy) + geom_bar()
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) + geom_bar(stat="identity")
respondents_occupancy <- as.data.frame(table(survey[,4]), col.names=c("Occupancy", "Frequency"))
View(respondents_occupancy)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
respondents_occupancy <- as.data.frame(table(survey[,4]), col.names=c("Occupancy", "Frequency"))
View(respondents_occupancy)
View(respondents_occupancy)
respondents_occupancy <- as.data.frame(table(survey[,4]), dnn=list("Occupancy"))
View(survey)
View(respondents_occupancy)
respondents_occupancy <- as.data.frame(table(survey[,4], dnn=list("Occupancy")))
View(respondents_occupancy)
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("occupancy"), responseName = "frequency"))
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("occupancy")))
ggplot(respondents_occupancy, aes(x=Var1,y=Freq)) + geom_bar(stat="identity")
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("Occupancy")))
ggplot(respondents_occupancy, aes(x=Occupancy,y=Freq)) + geom_bar(stat="identity")
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("Occupancy")), responseName = "Frequency")
View(respondents_occupancy)
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("Occupancy")), responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
View(survey)
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("Occupancy")), responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
respondents_prog_experience <- as.data.frame(table(survey[,5], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("Occupancy")), responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
respondents_prog_experience <- as.data.frame(table(survey[,5], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_plc_experience <- as.data.frame(table(survey[,6], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_plc_experience <- as.data.frame(table(survey[,6], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_prog_experience <- as.data.frame(table(survey[,5], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_plc_experience <- as.data.frame(table(survey[,6], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_occupancy <- as.data.frame(table(survey[,4], dnn = list("Occupancy")), responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
respondents_prog_experience <- as.data.frame(table(survey[,5], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_plc_experience <- as.data.frame(table(survey[,6], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_iec_experience <- as.data.frame(table(survey[,7], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_iec_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
split_line_values <- function(column) {
for (row in 1:nrow(column)) {
print(row)
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in seq_along(column)) {
print(row)
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in 1:nrow(column)) {
print(column[row])
}
}
split_line_values(survey[,7])
print(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(column[index])
}
}
split_line_values(survey[,7])
split_line_values(survey[,7])
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(column[index])
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(column[index])
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(column[index].value)
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(typeof(column[index]))
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:nrow(column)) {
print(typeof(column[index]))
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(typeof(column[index]))
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
print(typeof(row)
}
}
split_line_values(survey[,7])
respondents_iec_experience <- as.data.frame(table(survey[,7], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_iec_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
split_line_values <- function(column) {
for (row in column) {
print(typeof(row))
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(row)
print(typeof(row))
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(typeof(row))
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
print(typeof(column))
for (row in column) {
print(row)
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(as.vector(survey[,7]))
split_line_values <- function(column) {
a <- column
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(as.vector(survey[,7]))
split_line_values <- function(column) {
a <- column
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(as.vector(survey[,7]))
View(split_line_values)
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(dataframe) {
for (row in dataframe[,7]) {
print(row)
print("---")
}
}
split_line_values(survey)
split_line_values <- function(dataframe) {
for (row in 1:length(dataframe[,7])) {
print(dataframe[,7][row])
print("---")
}
}
split_line_values(survey)
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(strsplit(row, ","))
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(typeof(value))
}
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
print(typeof(column))
}
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
print(length(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
show(column)
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
show(column)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
display(column)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
show(survey)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
View(column)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
View(row)
}
}
split_line_values(survey[,7])
install.packages("tidyverse")
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
View(survey)
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
respondents_iec_experience <- as.data.frame(table(survey[,7], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_iec_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
library(tidyverse)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
setwd("~/Documents/Ladder Logic (Survey)")
install.packages("tidyverse", dependencies = TRUE)
rlang (install.package(rlang))
library(rlang)
rlang(install.package(rlang))
install.packages("rlang")
install.packages("rlang")
library(rlang)
rlang(install.package(rlang))
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
colnames(survey)
print(survey$W1 - Suppose the following automation task containing two switches and one motor, where to turn the motor ON, both switches must be ON. The possible states for the elements of this task can be described by the table and illustration below:     Using your understanding of Ladder Logic, select the diagram that correctly solves this task:)
print(survey$"W1 - Suppose the following automation task containing two switches and one motor, where to turn the motor ON, both switches must be ON. The possible states for the elements of this task can be described by the table and illustration below:     Using your understanding of Ladder Logic, select the diagram that correctly solves this task:")
print(survey$"RD1 - Please select the role most applicable to you:")
respondents_occupancy <- as.data.frame(table(survey$"RD1 - Please select the role most applicable to you:", dnn = list("Occupancy")), responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
respondents_prog_experience <- as.data.frame(table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
respondents_plc_experience <- as.data.frame(table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
survey %>%
mutate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`=strsplit(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, ",")) %>%
unnest(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`)
View(survey)
teste %>%
mutate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`=strsplit(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, ",")) %>%
unnest(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`)
survey %>%
mutate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`=strsplit(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, ",")) %>%
unnest(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`)
library(stringr)
str_split_fixed(survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, ",")
str_split(survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, ",")
a <- str_split(survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, ",")
View(a)
library(tidyr)
separate(survey, `RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",")
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`)
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = NA)
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "")
library(ggplot2)
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "", extra="merge")
frequency <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(frequency, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
library(readr)
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
library(ggplot2)
library(readr)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
survey <- read_csv("data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
