print(column[index].value)
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(typeof(column[index]))
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:nrow(column)) {
print(typeof(column[index]))
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (index in 1:length(column)) {
print(typeof(column[index]))
strsplit(column[index], ",")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
print(typeof(row)
}
}
split_line_values(survey[,7])
respondents_iec_experience <- as.data.frame(table(survey[,7], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_iec_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
split_line_values <- function(column) {
for (row in column) {
print(typeof(row))
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(row)
print(typeof(row))
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(typeof(row))
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
print(typeof(column))
for (row in column) {
print(row)
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(as.vector(survey[,7]))
split_line_values <- function(column) {
a <- column
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(as.vector(survey[,7]))
split_line_values <- function(column) {
a <- column
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(as.vector(survey[,7]))
View(split_line_values)
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(dataframe) {
for (row in dataframe[,7]) {
print(row)
print("---")
}
}
split_line_values(survey)
split_line_values <- function(dataframe) {
for (row in 1:length(dataframe[,7])) {
print(dataframe[,7][row])
print("---")
}
}
split_line_values(survey)
split_line_values <- function(column) {
for (row in column) {
print(row)
print("---")
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
print(strsplit(row, ","))
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(typeof(value))
}
}
print(typeof(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
print(typeof(column))
}
split_line_values <- function(column) {
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
print(length(column))
}
split_line_values(survey[,7])
split_line_values <- function(column) {
show(column)
for (row in column) {
for (value in strsplit(row, ",")) {
print(value)
}
}
}
split_line_values(survey[,7])
split_line_values <- function(column) {
show(column)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
display(column)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
show(survey)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
View(column)
}
split_line_values(survey[,7])
split_line_values <- function(column) {
for (row in column) {
View(row)
}
}
split_line_values(survey[,7])
install.packages("tidyverse")
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
View(survey)
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
respondents_iec_experience <- as.data.frame(table(survey[,7], dnn = list("Experience")), responseName = "Frequency")
ggplot(respondents_iec_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
survey %>%
mutate(survey[,7]=strsplit(survey[,7], ",")) %>%
unnest(survey[,7])
library(tidyverse)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "", extra="merge")
library(readr)
library(ggplot2)
library(tidyr)
survey <- read_csv("data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
load("~/Documents/Ladder Logic (Survey)/.RData")
library(readr)
library(ggplot2)
library(tidyr)
survey <- read_csv("data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "", extra="merge")
survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "teste", extra="merge")
View(survey)
a <- survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "teste", extra="merge")
View(a)
a <- survey %>% separate(`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep=",", into = "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?")
View(a)
a <- survey %>% separate(data=`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`,
sep=",",
into = NA)
a <- survey %>% separate(col=`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`,
sep=",",
into = NA)
read.table(text = survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep = ",", colClasses = "character")
read.table(text = survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep = ",", header=TRUE)
library(splitstackshape)
install.packages("splitstackshape")
library(splitstackshape)
concat.split(survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, "RD4", ",", drop = TRUE)
concat.split(survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, "survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`", ",", drop = TRUE)
concat.split(survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = TRUE)
concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = TRUE)
a <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = TRUE)
View(a)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
a <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
View(a)
RD4 <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
library(readr)
library(ggplot2)
library(tidyr)
library(splitstackshape)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD4 <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
read.table(text = survey$`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?`, sep = ",", header=TRUE)
survey <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
View(survey)
RD4 < survey %>%
unite("RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", `RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?_1`:`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?_5`)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
survey <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
RD4 < survey %>%
unite("RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", `RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?_1`:`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?_5`)
RD4 <- survey %>%
unite("RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", `RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?_1`:`RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?_5`)
View(RD4)
RD4 <- stack(survey, c(1, 2))
View(RD4)
View(survey)
RD4 <- stack(survey, c(1))
View(RD4)
RD4 <- stack(survey, c(29,33))
RD4 <- stack(survey, c(29, 33))
RD4 <- stack(survey, c(29:33))
RD4 <- stack(survey, c(29, 30, 31, 32, 33))
RD4 <- stack(survey, c(1, 29, 30, 31, 32, 33))
RD4 <- stack(survey, c(29, 30))
RD4 <- stack(survey, select=c(29, 30))
RD4 <- stack(x=survey, select=c(29, 30))
RD4 <- stack(x=survey)
RD4 <- stack(x=survey, select=c(1))
View(RD4)
RD4 <- stack(x=survey, select=c(29))
RD4 <- stack(x=survey, select=c(1, 29))
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv", stringsAsFactors = FALSE)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv", stringsAsFactors=TRUE)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD4 <- stack(x=survey, select=c(1, 29))
survey <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
RD4 <- stack(x=survey, select=c(1, 29))
View(RD4)
survey <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
survey <- data.frame(lappy(survey, as.character), stringsAsFactors = FALSE)
library(lappy)
survey <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
survey <- data.frame(lapply(survey, as.character), stringsAsFactors = FALSE)
RD4 <- stack(x=survey, select=c(1, 29))
View(RD4)
View(RD4)
View(survey)
library(readr)
library(ggplot2)
library(tidyr)
library(splitstackshape)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD4 <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
RD4 <- data.frame(lapply(RD4, as.character), stringsAsFactors = FALSE)
RD4 <- stack(x=survey, select=c(1, 29))
View(RD4)
RD4 <- stack(x=survey, select=29:33)
RD4 <- stack(x=RD4, select=29:33)
View(RD4)
RD4 <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
RD4 <- data.frame(lapply(RD4, as.character), stringsAsFactors = FALSE)
RD4 <- na.omit(stack(x=RD4, select=29:33))
View(RD4)
RD4 <- table(RD4$values, dnn = list("Language"))
respondents_iec_experience <- as.data.frame(RD4, responseName = "Frequency")
View(respondents_iec_experience)
ggplot(respondents_plc_experience, aes(x=Language,y=Frequency)) + geom_bar(stat="identity")
View(respondents_iec_experience)
ggplot(respondents_iec_experience, aes(x=Language,y=Frequency)) + geom_bar(stat="identity")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency)) + geom_bar(stat="identity", colour="black")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy)) + geom_bar(stat="identity", colour="black")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy)) + geom_bar(stat="identity")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy,palette="jco")) + geom_bar(stat="identity")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy,palette="Blues")) + geom_bar(stat="identity")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy)) + geom_bar(stat="identity",palette="Blues")
ggbarplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy)) + geom_bar(stat="identity")
ggbarplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy)) + geom_bar(stat="identity")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy)) + geom_bar(stat="identity")
install.packages(c("difR", "ltm"))
install.packages(c("difR", "ltm"))
library("eRm")
install.packages("eRm")
install.packages("eRm", repos = 'https://cloud.r-project.org')
install.packages("eRm")
install.packages("eRm")
install.packages("eRm")
library("eRm")
install.packages("mnormt")
install.packages("psych")
install.packages("eRm")
install.packages("eRm")
install.packages("lattice")
install.packages("eRm")
install.packages("ltm")
library("ltm")
install.packages("msm")
install.packages("survival")
install.packages("msm")
install.packages("ltm")
install.packages("difR")
update.packages()
library("eRm")
library("ltm")
library("difR")
install.packages("difR")
install.packages("vegan")
install.packages("mgcv")
install.packages("vegan")
install.packages("difR")
library("eRm")
library("ltm")
library("difR")
data(verbal, package = "difR")
View(verbal)
?verbal
dat_1 <- verbal[, 1:24]
res_rm_1 <- RM(dat_1)
res_rm_1 <- RM(dat_1)
res_rm_1                   # Short summary of item parameters
summary(res_rm_1)          # Longer summary of item parameters
betas <- -coef(res_rm_1)     # Item difficulty parameters
round(sort(betas), 2)
plotICC(res_rm_1, item.subset = "S2WantShout")
abline(v = -0.18, col = "grey")
abline(h = .5, col = "grey")
plotjointICC(res_rm_1, item.subset =  1:12, cex = .6)
plotjointICC(res_rm_1, item.subset = 13:24, cex = .6)
mean(betas[ 1:12])           # Want-items
mean(betas[13:24])           # Do-items
plotPImap(res_rm_1, cex.gen = .55)
plotPImap(res_rm_1, cex.gen = .55, sorted = TRUE)
round(sum(betas), 10)
tmp1 <- RM(dat_1, sum0 = FALSE)
round(coef(tmp1), 2)
setwd("~/Documents/Ladder Logic (Survey)/code")
library(readr)
library(ggplot2)
library(tidyr)
library(splitstackshape)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
setwd("~/")
library(readr)
library(ggplot2)
library(tidyr)
library(splitstackshape)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD4 <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
RD4 <- data.frame(lapply(RD4, as.character), stringsAsFactors = FALSE)
RD4 <- na.omit(stack(x=RD4, select=29:33))
RD4 <- table(RD4$values, dnn = list("Language"))
install.packages("splitstackshape")
library(splitstackshape)
survey <- read_csv("Documents/Ladder Logic (Survey)/data/survey/Survey - Can you understand Ladder Logic (Complete) - Responses.csv")
RD1 <- table(survey$`RD1 - Please select the role most applicable to you:`, dnn = list("Occupancy"))
respondents_occupancy <- as.data.frame(RD1, responseName = "Frequency")
ggplot(respondents_occupancy, aes(x=Occupancy,y=Frequency,fill=Occupancy,color=Occupancy)) + geom_bar(stat="identity")
RD2 <- table(survey$`RD2 - How many years of previous programming experience do you have?`, dnn = list("Experience"))
respondents_prog_experience <- as.data.frame(RD2, responseName = "Frequency")
ggplot(respondents_prog_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD3 <- table(survey$`RD3 - Do you have any prior experience with Programmable Logic Controllers?`, dnn = list("Experience"))
respondents_plc_experience <- as.data.frame(RD3, responseName = "Frequency")
ggplot(respondents_plc_experience, aes(x=Experience,y=Frequency)) + geom_bar(stat="identity")
RD4 <- concat.split(survey, "RD4 - Which programming languages do you use to write code for Programmable Logic Controllers?", ",", drop = FALSE)
RD4 <- data.frame(lapply(RD4, as.character), stringsAsFactors = FALSE)
RD4 <- na.omit(stack(x=RD4, select=29:33))
RD4 <- table(RD4$values, dnn = list("Language"))
respondents_iec_experience <- as.data.frame(RD4, responseName = "Frequency")
ggplot(respondents_iec_experience, aes(x=Language,y=Frequency)) + geom_bar(stat="identity")
setwd("~/Documents/Ladder Logic (Survey)")
library("eRm")
source("convert_to_binary.R")
rm_1 <- RM(responses_matrix)
setwd("~/Documents/Ladder Logic (Survey)/code")
library("eRm")
source("convert_to_binary.R")
rm_1 <- RM(responses_matrix)
betas <- -coef(rm_1)
round(sort(betas), 2)
plotjointICC(rm_1, item.subset = 1:10, cex = .6, lwd=1.5 )
abline(h = .5, col = "gray")
plotjointICC(rm_1, item.subset = 1:10, cex = .6, lwd=1.5 )
plotPImap(rm_1, cex.gen = .8, sorted = TRUE, irug = TRUE)
plotjointICC(rm_1, item.subset = 1:10, cex = .6, lwd=1.5 )
plotPImap(rm_1, cex.gen = .8, sorted = TRUE, irug = TRUE)
plotjointICC(rm_1, item.subset = 1:10, cex = .6, lwd=1.5 )
